%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 193 193 
%%LanguageLevel: 2
%%Creator: CorelDRAW 11
%%Title: 32.eps
%%CreationDate: Sun Sep 14 15:35:14 2003
%%For: ldn
%%DocumentProcessColors: Cyan Magenta Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 2 def
/CMYKMarks true def
/UseLevel 2 def
%Build: CorelDRAW 11 Version 11.633
%Color profile: Disabled
/CorelIsEPS true def
%%BeginResource: procset wCorel11Dict 11.0 0
/wCorel11Dict 300 dict def wCorel11Dict begin
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CorelIsSeps where{pop}{/CorelIsSeps false def}ifelse
/CorelIsInRIPSeps where{pop}{/CorelIsInRIPSeps false def}ifelse/CorelIsEPS
where{pop}{/CorelIsEPS false def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge
{pop}{exch pop}ifelse}bd/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch
rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll
eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1
exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}
repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1
roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index
.114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb
/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray
ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor
get def/SetHsb systemdict/sethsbcolor get def/GetHsb systemdict
/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor
sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop
/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where{pop
/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld
}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{
pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse
/setoverprint where{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where
{pop}{/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1
roll mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/Corelsetcustomcolor_exists false def/setcustomcolor where{pop
/Corelsetcustomcolor_exists true def}if CorelIsSeps true eq CorelIsInRIPSeps
false eq and{/Corelsetcustomcolor_exists false def}if
Corelsetcustomcolor_exists false eq{/setcustomcolor{exch aload pop SepMode_5 0
eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll
5 rp 1 sub neg SetGry}ifelse}bd}if/@scc_5{dup type/booleantype eq{dup
currentoverprint ne{setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse dup _ eq
{pop setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse
SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage
where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd/$multi xd $multi
true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch pop abs{daqR pop
daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop pop exch pop abs
{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd{dataaq ncolors
dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index get 255
div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g 255 mul
cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv getinterval pop}{
4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1 index get 255 div
$dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div $dat 4 index 3
add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat
0 $dat length ncolors idiv getinterval}if}ifelse}image}ifelse}bd}ifelse
/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/$fm 0 def
/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{CorelPtrnDoFill}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$fil 4 eq
{CorelShfillDoFill}{$t $c $m $y $k $n $o @scc_5{wfill}{@np}ifelse}ifelse}
ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{
matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M $Y $K
$N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}{@np}ifelse $SDF
{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{
5 array astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{
/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{
@cp}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{
@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}
{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1
def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq
{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/@i{@sm @gs @ii 6 index 1 ne{/$frg true
def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg false def}
ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd/$lly xd
/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi string
def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub $ury
$lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts 1 eq
{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts
1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq
MaskedImage true eq and{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq
UseLevel 3 eq or and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{
7 -2 roll pop pop @I}ifelse}ifelse}ifelse}bd
% Copyright (c)1992-2002 Corel Corporation
% All rights reserved.     v11.0 r0.0
/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true def}{@gs $t $c $m $y $k $n $o
@scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd/$pyf xd/$pxf xd/$pn xd}bd
/CorelPtrnDoFill{@gs $ctm setmatrix $pm concat CorelPtrnSetBBox wclip @sv Bburx
Bbury $pm itransform/$tury xd/$turx xd Bbllx Bblly $pm itransform/$tlly xd
/$tllx xd newpath $tllx $tlly m $tllx $tury l $turx $tury l $turx $tlly l $tllx
$tlly m @cp pathbbox @rs/$tury xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx
sub def/$hei $tury $tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{
$t $c $m $y $k $n $o @scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei
scale <00> 8 1 false[8 0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse
@gr $wid 0 gt $hei 0 gt and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub
/$phei xd exch sub/$pwid xd $wid $pwid div ceiling 1 add/$tlx xd $hei $phei div
ceiling 1 add/$tly xd currentdict/CorelPtrnL2Pattern known $psy 0 eq and $psx 0
eq and{CorelPtrnL2Pattern}{$psx 0 eq{CorelPtrnTileVeritcal}{CorelPtrnTileHoriz
}ifelse}ifelse}if @gr @np/$bkg false def}bd/CorelPtrnSetBBox{pathbbox/$ury xd
/$urx xd/$lly xd/$llx xd}bd/CorelPtrnSetFirstTile{$tllx $pxf add dup $tllx gt
{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei add}if/$ty xd}bd/p{/$pm
xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}bd/CorelPtrnDraw{@ep}bd
/CorelPtrnPutTile{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei
sub $ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{
/$in false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0
$phei rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3
index sub Tl matrix currentmatrix/$ctm xd CorelPtrnDraw pop pop pop pop}{pop
pop}ifelse @rs}bd/CorelPtrnTileHoriz{CorelPtrnSetFirstTile 0 1 $tly 1 sub{dup
$psx mul $tx add{dup $llx gt{$pwid sub}{exit}ifelse}loop exch $phei mul $ty
exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1 roll add exch CorelPtrnPutTile
pop}for pop pop}for}bd/CorelPtrnTileVeritcal{CorelPtrnSetFirstTile 0 1 $tlx 1
sub{dup $pwid mul $tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}
{exit}ifelse}loop 0 1 $tly 1 sub{$phei mul 3 copy sub CorelPtrnPutTile pop}for
pop pop}for}bd L2? UseLevel 2 ge and{/CorelPtrnL2Pattern{@sv[$pn cvlit load
aload pop pop]$pwid $phei $pn cvlit load aload pop pop pop pop pathbbox pop pop
2 index sub exch 3 index sub 4 -2 roll pop pop exch matrix identmatrix
translate/PatternMatrix xd/PatternYStep xd/PatternXStep xd/PatternBBox xd
currentdict/PatternMainDict xd <</PaintType 1/PatternType 1/TilingType 1/BBox
PatternBBox/XStep PatternXStep/YStep PatternYStep/PaintProc{begin
PatternMainDict begin $ctm currentmatrix pop 0 CorelPtrnDraw end end}bind >>
PatternMatrix makepattern setpattern fill @rs}def}if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel11Dict begin
@BeginSysCorelDict
@ssa
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
0.00000 0.00000 192.75591 192.75591 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
0.00000 192.75591 m
192.75591 192.75591 L
192.75591 0.00000 L
0.00000 0.00000 L
0.00000 192.75591 L
@c
F

@rax %Note: Object
18.66983 16.25754 174.08608 176.49836 @E
 0 O 0 @g
0.35 0.16 0.00 0.46 k
/$fm 0 def
51.25323 59.55024 m
51.22715 59.80932 51.17556 60.17187 51.12369 60.74164 C
51.07181 61.02652 51.04602 61.28561 51.01994 61.54469 C
49.90620 61.44094 L
49.62161 61.44094 L
46.74614 61.31169 43.40494 61.54469 40.19301 62.08838 C
37.00715 62.63263 33.92476 63.48728 31.54195 64.57493 C
26.64624 66.85427 22.52806 70.09228 20.63735 72.65650 C
19.49754 74.26233 18.79824 75.94583 18.69449 77.65569 C
18.46148 80.99688 19.86009 83.56139 23.09783 85.11534 C
24.96274 86.02214 27.52724 86.25515 30.81657 85.58164 C
35.03849 84.70091 37.70646 84.13115 39.39024 83.71672 C
31.85263 96.22715 26.30948 109.67046 23.02016 121.58504 C
18.46148 138.05887 18.40961 152.38261 23.33083 158.67666 C
30.79049 168.18265 40.01159 172.94882 49.02576 175.09861 C
62.18391 178.23260 75.29017 175.35770 80.88491 173.75159 C
82.43915 174.03676 84.04498 174.26976 85.70268 174.45090 C
88.03389 174.68391 90.33931 174.83953 92.67052 174.86561 C
97.25499 174.94328 101.39924 174.34715 105.12907 173.23370 C
107.95238 172.40485 110.49080 171.26504 112.79622 169.89222 C
126.49833 174.55465 176.77389 187.92000 173.97638 132.02391 C
173.63962 125.34094 168.40743 98.22189 160.48148 79.41685 C
157.73584 72.91559 154.62794 67.26898 151.15691 63.43540 C
146.36494 58.09946 140.84787 55.74246 134.57962 57.99600 C
132.89613 58.59184 131.23843 59.52416 129.63231 60.84539 C
129.37323 60.53443 129.06255 60.19767 128.75187 59.91279 C
126.86088 58.12554 123.80457 56.72693 121.39569 56.13109 C
118.52050 55.40598 113.72854 54.55106 108.39288 55.45757 C
106.39843 55.79433 104.35209 56.36438 102.33156 57.27061 C
102.40951 56.41597 102.46110 55.48337 102.43531 54.49918 C
102.38372 53.10057 102.35764 51.70167 102.30576 50.71748 C
102.17622 47.32441 101.99509 43.95713 101.63225 40.69361 C
101.24391 37.27446 100.67386 34.24394 99.79342 31.83506 C
99.66387 31.49830 99.56041 31.18762 99.43087 30.82507 C
97.38454 24.50466 93.70630 13.26331 76.24857 16.99342 C
69.46214 18.44391 63.42690 20.28302 58.58334 27.22450 C
54.36142 33.20787 51.66765 42.81732 51.25323 59.55024 C
@c
F

@rax %Note: Object
23.16444 20.57414 169.58665 172.34646 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
58.24687 71.38743 m
58.68709 79.88315 54.49096 81.41159 51.56391 82.24044 C
51.87487 82.68038 52.28929 83.19855 52.75559 83.79439 C
54.25795 85.63323 56.14866 88.01631 57.67682 91.72035 C
57.91011 92.29039 58.60942 93.53339 59.51594 95.16529 C
63.37531 102.08098 70.99030 115.73150 69.48822 125.08214 C
68.42636 131.73874 63.34951 136.14208 50.68346 134.82113 C
50.70926 134.95039 50.76113 135.07994 50.81301 135.20976 C
51.40857 136.91906 52.36696 139.17260 53.76586 141.68494 C
59.30872 151.76069 71.35285 165.82564 92.80006 166.16239 C
118.67584 166.60261 123.38986 140.85609 124.24479 130.02945 C
123.07918 130.75455 121.73216 131.45386 120.30746 132.04970 C
118.13187 132.93014 115.67112 133.68161 113.21036 134.06995 C
110.64643 134.45830 108.05613 134.40671 105.72491 133.68161 C
102.07276 132.54180 99.17178 129.82195 98.03197 124.64164 C
94.04306 106.12176 97.61754 98.14394 100.41506 91.90148 C
102.46337 87.39496 101.61269 89.31713 102.89792 85.70268 c
103.36649 84.38513 103.77836 83.14583 104.06721 82.00715 C
103.75625 82.08482 103.41978 82.13669 103.13461 82.16249 C
101.45112 82.31783 99.48246 81.64460 98.10992 80.66013 C
96.63335 79.59827 95.44195 77.94057 94.76844 76.10145 C
94.17260 74.39187 94.25027 72.75997 94.27635 70.97272 C
94.45776 62.65843 94.40561 54.44759 94.09493 47.76463 C
93.78425 41.10803 93.24000 36.13493 92.51490 34.27002 C
91.73792 32.32715 90.49465 29.45197 88.13735 27.45751 C
85.85802 25.51493 82.33540 24.34932 76.74066 25.54101 C
71.84523 26.60287 68.52983 28.10523 66.35395 30.38457 C
64.15228 32.63811 62.93480 35.84976 62.15811 40.30498 C
61.61386 43.56879 60.83688 49.26728 60.11150 54.91361 C
59.23106 61.80378 58.45380 68.87480 58.24687 71.38743 C
@c
119.03868 67.32057 m
110.51688 69.08202 109.66195 70.14387 106.91631 73.64069 C
105.90633 74.91005 104.89606 76.07537 103.75625 77.21518 C
103.39370 77.57773 103.03115 77.65569 102.74627 77.68148 C
102.12463 77.73307 101.24391 77.39660 100.69994 77.00797 C
99.97455 76.49008 99.35291 75.60907 98.99036 74.62488 C
98.65361 73.61490 98.52406 72.37162 99.17178 71.46482 C
102.35764 67.03569 106.26888 65.17077 109.92104 64.54913 C
113.62507 63.90142 117.12161 64.54913 119.21981 65.06702 C
120.25587 65.32639 121.44728 65.81849 122.22454 66.36217 C
121.60261 66.67313 120.56683 67.00989 119.03868 67.32057 C
@c
121.49915 83.53531 m
122.19846 84.13115 122.84617 84.75279 123.46781 85.42602 C
126.70526 88.97471 128.88113 93.63713 129.37323 98.84324 C
129.55465 100.70844 129.52857 102.62494 129.24397 104.56753 C
128.15603 112.36394 128.57046 119.38365 128.80346 123.03581 C
128.85534 123.99420 128.90721 124.71931 128.88113 125.28935 C
128.90721 125.47049 129.50277 148.91159 116.16321 162.01814 C
128.20762 165.98126 167.13836 175.48696 165.01436 132.69713 C
164.70369 126.45468 159.75638 100.94145 152.24457 83.14668 C
149.88784 77.55194 147.27146 72.75997 144.50003 69.67757 C
142.19461 67.11364 139.83789 65.87008 137.55827 66.69893 C
136.31528 67.13943 134.96797 68.17550 133.54356 69.88507 C
128.46671 76.02378 123.70082 81.20409 121.49915 83.53531 C
@c
73.91735 166.65449 m
61.71761 161.26696 54.05046 151.50189 49.85461 143.83474 C
48.32646 141.11518 47.26431 138.60283 46.59080 136.68605 C
45.81383 134.51046 45.52894 132.80060 45.65849 132.04970 C
45.65849 131.97175 45.68428 131.89408 45.68428 131.81641 C
45.58054 128.63055 45.96917 126.01446 46.40939 123.26882 C
46.72035 121.14510 47.05710 118.94315 47.16085 116.35313 C
47.23824 113.89238 46.92756 111.30208 46.59080 108.60860 C
45.76195 101.74422 44.88151 94.44019 49.49206 86.87679 C
49.41411 86.77304 49.33644 86.66929 49.25877 86.59162 C
49.07735 86.35861 48.89594 86.12532 48.71480 85.91839 C
40.76306 98.42882 34.96110 112.18280 31.64542 124.22721 C
27.81184 138.08466 27.21628 149.37789 30.37635 153.44476 C
35.84154 160.41231 42.52422 164.21981 49.18110 166.16239 C
58.63521 168.88195 68.06353 167.84589 73.91735 166.65449 C
@c
124.40013 125.31515 m
124.40013 124.64164 124.34854 123.96813 124.32246 123.29490 C
124.08917 119.53899 123.64923 112.26047 124.81455 103.94589 C
125.04756 102.34035 125.07364 100.76003 124.91802 99.25767 C
124.52967 95.06154 122.76822 91.30592 120.15213 88.45654 C
117.58791 85.63323 114.19483 83.71672 110.46501 83.19855 C
109.79150 83.09509 109.09219 83.06929 108.41868 83.04321 C
108.08050 84.41433 107.60712 85.83449 107.06712 87.32041 c
106.32302 89.36702 106.11751 90.19899 104.50772 93.74060 C
101.96901 99.38750 98.73156 106.58778 102.43531 123.70904 C
103.13461 127.02444 104.89606 128.73430 107.04586 129.40753 C
108.67776 129.92570 110.59455 129.92570 112.56293 129.64054 C
114.63506 129.32986 116.73326 128.65635 118.62397 127.90545 C
121.88778 126.55843 124.37433 125.41890 124.40013 125.31515 C
@c
111.11272 127.18006 m
109.46098 127.53383 107.21225 127.22967 105.72491 126.42888 C
104.87027 125.93679 104.40397 125.28935 104.48164 124.59005 C
104.48164 124.59005 L
104.48164 124.59005 L
104.48164 124.59005 L
104.48164 124.59005 L
104.55931 124.04580 105.10328 123.26882 105.93213 122.69906 C
106.70910 122.18088 107.77096 121.79254 108.91077 121.94787 C
108.91077 121.94787 L
108.91077 121.94787 L
108.93657 121.94787 L
108.93657 121.94787 L
110.05058 122.10321 111.03477 122.75065 111.73408 123.47603 C
112.41043 124.20057 112.83109 124.98265 112.79480 125.65559 c
112.75852 126.32825 112.26472 126.89206 111.11272 127.18006 C
@c
50.16529 130.28825 m
60.42246 131.55761 64.38529 128.76009 65.08460 124.38255 C
66.32816 116.56035 59.23106 103.81663 55.60469 97.31509 C
54.62050 95.57972 53.89512 94.23269 53.55836 93.42992 C
53.17002 92.54920 52.78139 91.72035 52.36696 90.99524 C
49.67320 96.69345 50.37250 102.54728 51.04602 108.09014 C
51.38277 110.96532 51.71924 113.76283 51.64186 116.48239 C
51.53811 119.30570 51.17556 121.66299 50.83880 123.91625 C
50.50205 126.01446 50.19109 128.03471 50.16529 130.28825 C
@c
48.89594 78.35499 m
49.23269 78.25124 49.62161 78.14778 50.00995 78.01824 C
51.56391 77.57773 54.02466 76.90422 53.76586 71.56857 C
53.55836 71.36164 52.88485 71.15414 51.87487 70.97272 C
50.29483 70.63597 48.19691 70.58438 45.96917 70.68813 C
42.08400 70.92113 37.93975 71.74998 35.29757 72.96718 C
32.57773 74.23654 30.29839 75.76469 28.89978 77.11172 C
34.73575 76.02463 43.60224 74.35757 48.89594 78.35499 C
@c
54.33534 127.18006 m
54.33534 127.18006 L
54.33534 127.18006 L
54.25795 126.71376 54.64630 125.91099 55.29402 125.23720 C
56.07780 124.42224 56.98772 123.92447 57.95206 123.81647 c
58.70183 123.73228 59.48504 123.88394 60.26712 124.30488 C
61.18781 124.81625 61.86274 125.51046 61.87521 126.20976 c
61.88372 126.68797 61.58211 127.16844 60.83688 127.59449 C
60.21524 127.93124 59.33452 128.21613 58.35033 128.37146 C
57.36614 128.50101 56.43354 128.47521 55.73424 128.29380 C
54.93146 128.11238 54.41329 127.72403 54.33534 127.18006 C
@c
46.20246 81.54085 m
45.16639 80.55638 41.66929 79.02822 29.93584 81.46318 C
27.65650 81.92948 26.05068 81.82573 25.01461 81.33364 C
23.66759 80.68592 23.07203 79.62406 23.17550 78.22545 C
23.22709 77.37052 23.61600 76.49008 24.26343 75.58328 C
25.76580 73.51143 29.21074 70.86926 33.43266 68.90088 C
36.56665 67.45011 41.35861 66.46592 45.73616 66.20683 C
48.30038 66.07757 50.76113 66.18104 52.75559 66.56967 C
53.24769 66.67313 53.73978 66.80268 54.18000 66.93222 C
54.54255 63.64261 55.08680 59.03206 55.68236 54.36992 C
56.40775 48.51581 57.21080 42.71386 57.75449 39.55408 C
58.68709 34.19206 60.24104 30.25502 63.11622 27.27638 C
65.99140 24.29773 70.00611 22.40702 75.80806 21.16346 C
83.06050 19.60951 87.82668 21.31880 91.03861 24.01257 C
94.19868 26.68082 95.70076 30.22923 96.65915 32.61231 C
97.61754 34.96932 98.23946 40.48611 98.57622 47.55742 C
98.80923 52.71194 98.91269 58.79877 98.86082 65.11918 C
102.12463 62.16633 105.72491 60.71584 109.14406 60.11972 C
113.67666 59.34302 117.82091 60.09392 120.30746 60.71584 C
122.12079 61.18186 124.37433 62.19213 125.69528 63.43540 C
126.47254 64.16079 126.99043 65.01543 127.14576 65.99962 C
127.30139 67.13943 126.96463 68.25317 125.90249 69.23764 C
124.89222 70.19603 123.02731 71.05068 119.91912 71.69811 C
113.02923 73.12252 112.40759 73.89978 110.43921 76.41213 C
109.92104 77.05984 109.40287 77.68148 108.85918 78.27732 C
108.88498 78.38079 108.88498 78.48454 108.88498 78.58800 C
109.63616 78.61408 110.36126 78.66567 111.08665 78.76942 C
113.44365 79.10617 115.69691 79.85707 117.76932 80.97109 C
119.63424 79.00243 124.63342 73.58882 130.09861 67.00989 C
132.04148 64.65288 134.06173 63.20239 136.08198 62.47701 C
140.35578 60.94885 144.26702 62.73609 147.84123 66.67313 C
150.94942 70.14387 153.79909 75.35027 156.36302 81.41159 C
164.08205 99.69817 169.15861 126.04025 169.49537 132.48992 C
172.13754 185.53691 120.35962 168.41565 112.12271 165.35934 C
107.22728 168.70082 100.90715 170.77294 92.72211 170.64340 C
88.75928 170.59181 85.05524 170.09972 81.66217 169.27087 C
80.03027 169.71080 77.72485 170.35852 77.59531 170.41039 C
77.28463 170.48806 76.92180 170.56573 76.45578 170.66920 C
70.36866 172.09389 59.23106 173.69972 47.93754 170.43619 C
40.47789 168.28639 32.99244 164.01260 26.85345 156.19011 C
22.81294 151.00980 23.14970 138.21420 27.34554 123.03581 C
30.94611 109.98113 37.36970 94.95808 46.20246 81.54085 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel11Dict 11.0 0
%%EOF
